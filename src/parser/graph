// Abstract Syntax Tree
digraph {
	0 [label="publicclassProgram{publicstaticvoidmain(String[]args){intdata=50;booleanflag=false;}}<EOF>
compilationUnit"]
	1 [label="publicclassProgram{publicstaticvoidmain(String[]args){intdata=50;booleanflag=false;}}
normalClassDeclaration"]
	2 [label="public
classModifier"]
	1 -> 2
	3 [label="{publicstaticvoidmain(String[]args){intdata=50;booleanflag=false;}}
classBody"]
	4 [label="publicstaticvoidmain(String[]args){intdata=50;booleanflag=false;}
methodDeclaration"]
	5 [label="public
methodModifier"]
	4 -> 5
	6 [label="static
methodModifier"]
	4 -> 6
	7 [label="voidmain(String[]args)
methodHeader"]
	8 [label="void
result"]
	7 -> 8
	9 [label="main(String[]args)
methodDeclarator"]
	10 [label="String[]args
formalParameter"]
	11 [label="String[]
unannArrayType"]
	12 [label="String
unannClassType_lfno_unannClassOrInterfaceType"]
	11 -> 12
	13 [label="[]
dims"]
	11 -> 13
	10 -> 11
	14 [label="args
variableDeclaratorId"]
	10 -> 14
	9 -> 10
	7 -> 9
	4 -> 7
	15 [label="{intdata=50;booleanflag=false;}
block"]
	16 [label="intdata=50;booleanflag=false;
blockStatements"]
	17 [label="intdata=50;
localVariableDeclarationStatement"]
	18 [label="intdata=50
localVariableDeclaration"]
	19 [label="int
integralType"]
	18 -> 19
	20 [label="data=50
variableDeclarator"]
	21 [label="data
variableDeclaratorId"]
	20 -> 21
	22 [label="50
literal"]
	20 -> 22
	18 -> 20
	17 -> 18
	16 -> 17
	23 [label="booleanflag=false;
localVariableDeclarationStatement"]
	24 [label="booleanflag=false
localVariableDeclaration"]
	25 [label="boolean
unannPrimitiveType"]
	24 -> 25
	26 [label="flag=false
variableDeclarator"]
	27 [label="flag
variableDeclaratorId"]
	26 -> 27
	28 [label="false
literal"]
	26 -> 28
	24 -> 26
	23 -> 24
	16 -> 23
	15 -> 16
	4 -> 15
	3 -> 4
	1 -> 3
	0 -> 1
}
